{"version":3,"file":"public/javascripts/app.js","sources":["app/application.js","app/initialize.js","app/lib/router.js","app/lib/view_helper.js","app/models/cart.js","app/models/carts.js","app/models/collection.js","app/models/model.js","app/models/product.js","app/models/products.js","app/models/receipt.js","app/models/receipts.js","app/models/recipe.js","app/models/recipes.js","app/models/to_cook.js","app/views/cart.js","app/views/carts.js","app/views/home.js","app/views/kitchen.js","app/views/product.js","app/views/products.js","app/views/receipt.js","app/views/receipts.js","app/views/recipe.js","app/views/recipes.js","app/views/templates/cart.jade","app/views/templates/carts-recipes.jade","app/views/templates/carts.jade","app/views/templates/home.jade","app/views/templates/kitchen.jade","app/views/templates/product.jade","app/views/templates/products.jade","app/views/templates/receipt-detail.jade","app/views/templates/receipt.jade","app/views/templates/receipts.jade","app/views/templates/recipe.jade","app/views/templates/recipes.jade","app/views/templates/to_cooks.jade","app/views/to_cook.js","app/views/to_cooks.js","app/views/view.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;;A,CCAA;;AACA;AADA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AALA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;;A,CCAA;;AACA;AACA;AACA;AAHA;;A,CCAA;;AACA;AACA;AACA;AAHA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7CA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhFA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AALA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AALA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAprxKA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArCA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxEA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjEA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnFA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/DA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhEA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9CA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlEA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnDA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;;A","sourcesContent":["// Application bootstrapper.\nvar Application = {\n    initialize: function () {\n        var HomeView = require('views/home'), Router = require('lib/router');\n        this.homeView = new HomeView();\n        this.router = new Router();\n        if (typeof Object.freeze === 'function') {\n            Object.freeze(this);\n        }\n    }\n};\n\nmodule.exports = Application;\n","var application = require('application');\n\n$(function () {\n  application.initialize();\n  Backbone.history.start();\n});\n","var application = require(\"application\");\n\nmodule.exports = Backbone.Router.extend({\n    routes: {\n        \"\": \"home\"\n    },\n\n    home: function () {\n        $(\"body\").html(application.homeView.render().el);\n    }\n});\n","// Put your handlebars.js helpers here.\n","var Model = require(\"./model\");\n\nmodule.exports = Model.extend({\n    \"urlRoot\": \"carts\"\n});\n","var Collection = require(\"./collection\"),\n    Cart       = require(\"./cart\");\n\nmodule.exports = Collection.extend({\n    \"model\": Cart,\n    \"url\": \"carts\"\n});\n","// Base class for all collections.\nmodule.exports = Backbone.Collection.extend({\n});\n","// Base class for all models.\nmodule.exports = Backbone.Model.extend({\n});\n","var Model = require(\"./model\");\n\nmodule.exports = Model.extend({\n    \"urlRoot\": \"products\",\n\n    // TODO: allow different places\n    \"urlImageRoot\": \n        \"http://drive.intermarche.com/ressources/images/produit/zoom/\",\n    \"noImageUrl\": \"images/product.png\",\n    \"urlImageExt\": \".jpg\", \n\n    \"normalizeName\": function (name) {\n        return name.replace(/[\\/&?%= ]/g, \"-\");\n    },\n\n    \"initialize\": function (params) {\n        if (!params.normalizedName) {\n            this.set(\"normalizedName\", this.normalizeName(params.name));\n        }\n        if (!params.image) {\n            this.set(\"image\", this.noImageUrl);\n        }\n    },\n\n    \"iBarCode\": function (bar12) {\n        var even,\n            odd,\n            checksum = \"\",\n            i;\n\n        if (bar12.lenght === 12) {\n            even = 0 ;\n            odd  = 0 ;\n\n            for (i = 0; i < 6; i++) {\n                even += parseInt(bar12[2 * i + 1]);\n                odd  += parseInt(bar12[2 * i]);\n            }\n            checksum = 10 - (3 * even + odd) % 10 ;\n        }\n\n        return \"0\" + bar12 + checksum.toString() ;\n    }\n\n});\n","var Collection = require(\"./collection\"),\n    Product    = require(\"./product\");\n\nmodule.exports = Collection.extend({\n    \"model\": Product,\n    \"url\": \"products\",\n\n    \"addProduct\": function (product) {\n        var iUrl = Product.prototype.urlImageRoot,\n            iExt = Product.prototype.urlImageExt,\n            product;\n\n        product = new Product ({\n            \"name\": product.label,\n            \"quantity\": product.amount,\n            \"price\": product.price,\n            \"image\": iUrl + Product.prototype.iBarCode(product.barcode) + iExt\n        });\n        if ($.trim(product.get(\"name\").toLowerCase()) !== \"nr\") {\n            product.save();\n        }\n    },\n\n    \"updateProduct\": function (data, detail) {\n        var product = new Product(data);\n        if (detail.amount) {\n            product.set(\"quantity\", product.get(\"quantity\") + detail.amount);\n            if (detail.price) {\n                product.set(\"price\", detail.price / detail.amount);\n            }\n        }\n        product.save();\n    },\n\n    \"updateProducts\": function (details, callback, update) {\n        // TODO: add a field without special caracters different\n        //       from the full name\n        var that = this,\n            label,\n            detail;\n\n        if (details.length) {\n            detail = details[0];\n            if (detail.label && detail.label) {\n                label = Product.prototype.normalizeName(detail.label);\n                $.ajax({\n                    \"dataType\": \"json\",\n                    \"url\": \"products/name/\" + label,\n                    \"success\": function (data) {\n                        update.apply(this, [data, detail])\n                        that.updateProducts(details.slice(1), callback, update);\n                    }\n                });\n            }\n        } else {\n            callback.call();\n        }\n    },\n\n    \"addProducts\": function (details, callback) {\n        var that = this;\n        this.updateProducts(details, callback, function (data, detail) {\n            if (data.length === 0) {\n                that.addProduct(detail);\n            } else {\n                that.updateProduct(data[0], detail);\n            }\n        });\n    },\n\n    \"removeProducts\": function (details, callback) {\n        var that = this;\n        this.updateProducts(details, callback, function (data, detail) {\n            if (data.length > 0) {\n                that.updateProduct(data[0], detail);\n            }\n        });\n    }\n\n});\n","var Model = require(\"./model\");\n\nmodule.exports = Model.extend({\n    \"urlRoot\": \"receipts\"\n});\n","var Collection = require(\"./collection\"),\n    Receipt    = require(\"./receipt\");\n\nmodule.exports = Collection.extend({\n    \"model\": Receipt,\n    \"url\": \"receipts\"\n});\n","var Model = require(\"./model\");\n\nmodule.exports = Model.extend({\n    \"urlRoot\": \"recipes\"\n});\n","var Collection = require(\"./collection\"),\n    Recipe     = require(\"./recipe\");\n\nmodule.exports = Collection.extend({\n    \"model\": Recipe,\n    \"url\": \"recipes\"\n});\n","var Collection = require(\"./collection\"),\n    Recipe     = require(\"./recipe\");\n\nmodule.exports = Collection.extend({\n    \"model\": Recipe,\n    \"url\": \"recipes/to-cook\"\n});\n","var View     = require(\"./view\"),\n    Cart     = require(\"../models/cart\"),\n    template = require(\"./templates/cart\");\n\nmodule.exports = View.extend({\n    \"tagName\": \"li\",\n    \"className\": \"cart col-xs-6\",\n    \"template\": template,\n\n    \"model\": Cart,\n\n    \"getRenderData\": function () { \n        var attributes = this.model.attributes;\n        return attributes;\n    },\n\n    \"initialize\": function () {\n        this.render();\n    },\n\n    \"events\": {\n        \"click .delete\": \"destroy\",\n    },\n\n    \"destroy\": function () {\n        var that = this;\n\n        that.model.destroy({\n            \"success\": function () {\n                that.remove();\n            }\n        });\n    },\n\n});\n\n","var View            = require(\"./view\"),\n    Cart            = require(\"../models/cart\"),\n    Carts           = require(\"../models/carts\"),\n    Recipes         = require(\"../models/recipes\"),\n    CartView        = require(\"./cart\"),\n    template        = require(\"./templates/carts\"),\n    templateRecipes = require(\"./templates/carts-recipes\");\n\nmodule.exports = View.extend({\n    \"collection\": Carts,\n    \n    \"template\": template,\n    \"templateRecipes\": templateRecipes,\n\n    \"initialize\": function (params) {\n        this.allRecipes = params.recipes;\n        this.tags       = [];\n        this.recipes    = new Recipes();\n        this.selectPrice();\n    },\n\n    \"getRenderData\": function () {\n        return { \"recipes\": this.recipes.models }\n    },\n\n    \"R\": 200,\n    \"RDecrement\": 25,\n    \"RTotal\": 50,\n\n    \"drawMarks\": function (R, total) {\n        var out = this.r.set(),\n            marksAttr = { \"fill\": \"#aaa\", \"stroke\": \"none\"};\n\n        for (var value = 0; value < total; value++) {\n            var alpha = 360 / total * value,\n                    a = (90 - alpha) * Math.PI / 180,\n                    x = 300 + R * Math.cos(a),\n                    y = 300 - R * Math.sin(a);\n            out.push(this.r.circle(x, y, 1).attr(marksAttr));\n        }\n        return out;\n    },\n\n    \"render\": function () {\n        var data = this.getRenderData(),\n            R = this.R;\n\n        this.$el.html(this.template(data));\n        this.collection.each(function (cart){\n            this.add(cart);\n        }, this);\n\n        this.r = Raphael(\"holder\", 600, 600);\n        this.r.customAttributes.arc = function (value, total, R, name) {\n            var alpha = 360 / total * value,\n                a = (90 - alpha) * Math.PI / 180,\n                x = 300 + R * Math.cos(a),\n                y = 300 - R * Math.sin(a),\n                color = \"hsb(\".concat(Math.round(R) / 200, \",\", \n                             value / total, \", .75)\"),\n                path;\n            if (total == value) {\n                path = [[\"M\", 300, 300 - R], \n                        [\"A\", R, R, 0, 1, 1, 299.99, 300 - R]]; \n            } else {\n                path = [[\"M\", 300, 300 - R], \n                        [\"A\", R, R, 0, +(alpha > 180), 1, x, y]];\n            }\n            return { \"path\": path, \"stroke\": color, \"title\": name };\n        };\n\n        for (var i = 0; i < 6; i++) {\n            this.drawMarks(R, this.RTotal);\n            R -= this.RDecrement;\n        }\n        this.updateRender(data);\n    },\n\n    \"updateValue\": function (value, R, total, name) {\n        var hand,\n            param = { \"stroke\": \"#fff\", \"stroke-width\": 20 };\n        name += \" : \" + value + \" repas.\";\n        hand = this.r.path().attr(param).attr({ \"arc\": [0, total, R, name] });\n        hand.animate({ \"arc\": [value, total, R, name] }, 750, \"elastic\");\n    },\n\n    \"updateRender\": function (data) {\n        var data  = data || this.getRenderData(),\n            total = this.RTotal,\n            R     = this.R,\n            recipe,\n            tag,\n            tags,\n            i,\n            j,\n            byTag = { \"organic\": 0, \n                      \"cheap\": 0, \n                      \"quick\": 0, \n                      \"light\": 0,\n                      \"vegetarian\": 0,\n                      \"sugar\": 0 };\n\n        // TODO : check already checked recipes\n        this.$el.find(\".carts-recipes\").html(this.templateRecipes(data));\n\n        for (i = 0; i < this.allRecipes.models.length; i++) {\n            recipe = this.allRecipes.models[i];\n            tags   = recipe.get(\"tags\");\n            for (j = 0; j < tags.length; j++) {\n                tag = tags[j];\n                if (recipe.get(\"cooked\")) {\n                    byTag[tag.id] += recipe.get(\"cooked\");\n                }\n            }\n        }\n\n        this.updateValue(byTag[\"organic\"], R, total, \"bio\");\n        R -= this.RDecrement;\n        this.updateValue(byTag[\"cheap\"], R, total, \"pas cher\");\n        R -= this.RDecrement;\n        this.updateValue(byTag[\"quick\"], R, total, \"rapide\");\n        R -= this.RDecrement;\n        this.updateValue(byTag[\"light\"], R, total, \"light\");\n        R -= this.RDecrement;\n        this.updateValue(byTag[\"vegetarian\"], R, total, \"végétarien\");\n        R -= this.RDecrement;\n        this.updateValue(byTag[\"sugar\"], R, total, \"sucré\");\n    },\n\n    \"add\": function (cart) {\n        var cartView = new CartView({ \"model\": cart });\n        this.$el.find(\"ul.carts\").prepend(cartView.el)\n    },\n\n    \"events\": {\n        \"click .recipe\": \"updateCart\",\n        \"click .order\": \"order\",\n        \"click .tag\": \"selectTag\",\n        \"submit .price\": \"selectPrice\",\n    },\n\n    \"query\": function () {\n        var that = this;\n        \n        this.recipes.fetch({ \n            \"data\": { \"tags\": this.tags,\n                      \"price\": this.price },\n            \"success\": function (data) {\n                that.updateRender();\n            }\n        });\n    },\n\n    \"selectTag\": function (evt) {\n        var $elem = $(evt.currentTarget),\n            selected,\n            that = this;\n        $(\".selected\").removeClass(\"selected\");\n        $elem.addClass(\"selected\");\n        selected  = $(\".tag.selected img\");\n        selected.each(function () {\n            var tag = $(this).attr(\"class\");\n            that.tags.push(tag);\n        });\n        this.query();\n    },\n\n    \"selectPrice\": function () {\n        this.price = $(\"#cart-price\").val();\n        this.query();\n\n        return false;\n    },\n\n    \"findRecipe\": function (recipeName) {\n        return _(this.recipes.models).find(function (recipe) { \n            return $.trim(recipe.get(\"name\")) == $.trim(recipeName);\n        });\n    },\n\n    \"checkedProducts\": {},\n\n    \"addProductsToCart\": function (recipe, products) {\n        // TODO: quantity of products and same product in diff recipe\n        if (!this.checkedProducts.recipe) {\n            this.checkedProducts[recipe] = {};\n        }\n        _(products).each(function (product) {\n            var productContainer = $(\"<div class='product-to-buy' />\");\n            productContainer.addClass(recipe);\n            if (!product.quantity) {\n                productContainer.html(product.name);\n                this.checkedProducts[recipe][product.name] = productContainer;\n                $(\"#shop .products\").append(productContainer);\n            }\n        }, this);\n    },\n\n    \"removeProductsFromCart\": function (recipe) {\n        delete this.checkedProducts[recipe];\n        $(\".product-to-buy.\" + recipe).remove();\n    },\n\n    \"updateCart\": function (evt) {\n        var $target    = $(evt.currentTarget),\n            $button    = $target.find(\".btn\"),\n            recipeName = $target.find(\".name\").text(),\n            recipe,\n            products;\n\n        recipe   = this.findRecipe(recipeName);\n        products = recipe.get(\"products\");\n\n        $button.toggleClass(\"glyphicon-unchecked\");\n        $button.toggleClass(\"glyphicon-check\");\n\n        recipeName = $.trim(recipeName).replace(\" \", \"\");\n        if ($button.hasClass(\"glyphicon-check\")) {\n            this.addProductsToCart(recipeName, products);\n        } else {\n            this.removeProductsFromCart(recipeName);\n        }\n    },\n\n    \"order\": function (evt) {\n        var checked      = $(\"#shop .recipe .glyphicon-check\"),\n            that         = this,\n            recipesNames = [],\n            recipeName,\n            cart,\n            products = [],\n            productsNames,\n            i, j;\n\n        recipesNames = Object.keys(this.checkedProducts);\n        for (i = 0; i < recipesNames.length; i++) {\n            recipeName    = recipesNames[i];\n            productsNames = Object.keys(this.checkedProducts[recipeName]);\n            for (j = 0; j < productsNames.length; j++) {\n                products.push(productsNames[j]);\n            }\n        }\n\n        cart = new Cart ({\n            \"name\": \"Commande : \" + recipesNames.join(\", \"),\n             \"products\": products\n            // TODO: quantity of products and same product in diff recipe\n        });\n\n        that.collection.create(cart, {\n            \"success\": function (cart) {\n                _(recipesNames).each(function (recipeName) {\n                    var recipe = that.findRecipe(recipeName);\n                    recipe.save({ \"toCook\": recipe.get(\"toCook\") + 1 });\n                });\n                that.add(cart);\n            }\n        });\n    },\n\n});\n","var View         = require(\"./view\"),\n    Carts        = require(\"../models/carts\"),\n    CartsView    = require(\"./carts\"),\n    Products     = require(\"../models/products\"),\n    ProductsView = require(\"./products\"),\n    Receipts     = require(\"../models/receipts\"),\n    ToCook       = require(\"../models/to_cook\"),\n    KitchenView  = require(\"./kitchen\"),\n    Recipes      = require(\"../models/recipes\"),\n    RecipesView  = require(\"./recipes\"),\n    template     = require(\"./templates/home\");\n\nmodule.exports = View.extend({\n    \"id\": \"home-view\",\n    \"template\": template,\n\n    \"events\": {\n        \"click .menu\": \"goMenu\",\n        \"click .menu .shop\": \"goShop\",\n        \"click .menu .fridge\": \"goFridge\",\n        \"click .menu .kitchen\": \"goKitchen\",\n        \"click .menu .recipes\": \"goRecipes\",\n    },\n\n    \"afterRender\": function () {\n        this.carts = new Carts();\n        this.carts.fetch({\n            \"error\": function (obj, response) {\n                console.log(response.responseText)\n            }\n        });\n\n        this.products = new Products();\n        this.products.fetch({\n            \"error\": function (obj, response) {\n                console.log(response.responseText)\n            }\n        });\n\n        this.recipes = new Recipes();\n        this.recipes.fetch({\n            \"error\": function (obj, response) {\n                console.log(response.responseText)\n            }\n        });\n\n        this.toCook = new ToCook();\n        this.toCook.fetch({\n            \"error\": function (obj, response) {\n                console.log(response.responseText)\n            }\n        });\n\n        this.receipts = new Receipts();\n        this.receipts.fetch({\n            \"error\": function (obj, response) {\n                console.log(response.responseText)\n            }\n        });\n    },\n\n    \"swipers\": {},\n\n    \"goPage\": function (pageName) {\n        var that = this, \n            pageClass = \".\" + pageName;\n\n        $(\"#content\").removeClass();\n        $(\"#content\").addClass(pageName);\n\n        if (!that.swipers[pageName] && pageName !== \"menu\") {\n            that.swipers[pageName] = $(\".swiper-container:visible\").swiper({\n                \"loop\": false,\n                \"grabCursor\": true,\n                \"pagination\": pageClass + \"> .pagination\",\n                \"paginationClickable\": true,\n                \"keyboardControl\": true,\n            });\n            $(pageClass + \"> .navigation.left\").on(\"click\", function (evt) {\n                evt.preventDefault()\n                that.swipers[pageName].swipePrev()\n            });\n            $(pageClass + \"> .navigation.right\").on(\"click\", function (evt) {\n                evt.preventDefault()\n                that.swipers[pageName].swipeNext()\n            });\n        } \n    },\n\n    \"goShop\": function () {\n        if (!this.cartsView) {\n            this.cartsView = new CartsView({ \n                \"el\": $(\"#shop\")[0],\n                \"collection\": this.carts,\n                \"recipes\": this.recipes\n            });\n            this.cartsView.render();\n        } else {\n            this.cartsView.updateRender();\n        }\n        this.goPage(\"shop\");\n\n        return false;\n    },\n\n    \"goFridge\": function () {\n        var that = this;\n\n        this.products.fetch({\n            \"success\": function () {\n                if (!that.productsView) {\n                    that.productsView = new ProductsView({ \n                        \"el\": $(\"#fridge\")[0],\n                        \"collection\": that.products\n                    });\n                    that.productsView.render();\n                }\n                that.productsView.render();\n                that.goPage(\"fridge\");\n            }\n        });\n\n        return false;\n    },\n\n    \"goKitchen\": function () {\n        if (!this.kitchenView) {\n            this.kitchenView = new KitchenView({ \n                \"el\": $(\"#kitchen\")[0],\n                \"receipts\": this.receipts,\n                \"toCook\": this.toCook\n            });\n            this.kitchenView.render();\n        } else {\n            this.kitchenView.updateRender(this.swipers[\"kitchen\"]);\n        }\n        this.goPage(\"kitchen\");\n\n        return false;\n    },\n\n    \"goRecipes\": function () {\n        var that = this;\n\n        this.products.fetch({\n            \"success\": function () {\n                if (!that.recipesView) {\n                    that.recipesView = new RecipesView({ \n                        \"el\": $(\"#recipes\")[0],\n                        \"collection\": that.recipes,\n                        \"products\": that.products\n                    });\n                }\n                that.recipesView.render();\n                that.goPage(\"recipes\");\n            }\n        });\n\n        return false;\n    },\n\n    \"goMenu\": function () {\n        this.goPage(\"menu\");\n\n        return false;\n    }\n\n});\n","var View         = require(\"./view\"),\n    Receipts     = require(\"../models/receipts\"),\n    ReceiptsView = require(\"./receipts\"),\n    ToCooksView  = require(\"./to_cooks\"),\n    template     = require(\"./templates/kitchen\");\n\nmodule.exports = View.extend({\n    \"id\": \"kitchen\",\n    \"template\": template,\n\n    \"initialize\": function (params) {\n        this.receipts = params.receipts;\n        this.toCook   = params.toCook;\n\n    },\n\n    \"render\": function () {\n        this.$el.html(this.template());\n\n        this.receiptsView = new ReceiptsView({ \n            \"el\": $(\"#receipts\")[0],\n            \"collection\": this.receipts\n        });\n        this.receiptsView.render();\n\n        this.toCooksView = new ToCooksView({ \n            \"el\": $(\"#recipes-to-cook\")[0],\n            \"collection\": this.toCook\n        });\n        this.toCooksView.render();\n    },\n\n    \"updateRender\": function (swiper) {\n        this.receiptsView.updateRender();\n        this.toCooksView.updateRender();\n    },\n});\n","var View     = require(\"./view\"),\n    Product  = require(\"../models/product\"),\n    template = require(\"./templates/product\");\n\nmodule.exports = View.extend({\n    \"tagName\": \"li\",\n    \"className\": \"row product\",\n    \"template\": template,\n\n    \"model\": Product,\n\n    \"getRenderData\": function () { \n        var attributes = this.model.attributes;\n        if (!attributes.image) {\n            attributes.image = \"images/product.png\";\n        }\n        return attributes;\n    },\n\n    \"initialize\": function () {\n        this.render();\n    },\n\n    \"events\": {\n        \"click .delete\": \"destroy\",\n        \"click .plus\": \"plus\",\n        \"click .minus\": \"minus\",\n    },\n\n    \"destroy\": function () {\n        var that = this;\n\n        $(\"#product-image\")\n            .val(that.$el.find(\".image img\").attr(\"src\"));\n        $(\"#product-name\").val(that.$el.find(\".name\").text());\n        $(\"#product-quantity\").val(that.$el.find(\".quantity\").text());\n        $(\"#product-price\").val(that.$el.find(\".price\").text());\n\n        that.model.destroy({\n            \"success\": function () {\n                that.remove();\n            }\n        });\n    },\n\n    \"plus\": function () {\n        var that = this;\n\n        that.model.save({ \"quantity\": this.model.get(\"quantity\") + 1 }, {\n            \"success\": function (product) {\n                that.render();\n            },\n            \"error\": function (obj, response) {\n                console.log(response.responseText)\n            }\n        });\n    },\n\n    \"minus\": function () {\n        var that = this;\n\n        that.model.save({ \"quantity\": this.model.get(\"quantity\") - 1 }, {\n            \"success\": function (product) {\n                that.render();\n            },\n            \"error\": function (obj, response) {\n                console.log(response.responseText)\n            }\n        });\n    }\n});\n\n","var View        = require(\"./view\"),\n    Product     = require(\"../models/product\"),\n    Products    = require(\"../models/products\"),\n    ProductView = require(\"./product\"),\n    template    = require(\"./templates/products\");\n\nmodule.exports = View.extend({\n    \"collection\": Products,\n    \n    \"template\": template,\n\n    \"render\": function () {\n        this.$el.html(this.template(this.getRenderData()));\n        this.oldProducts = this.$el.find(\"ul.products.old\");\n        this.newProducts = this.$el.find(\"ul.products.new\");\n        this.collection.each(function (product){\n            this.add(product, this.oldProducts);\n        }, this);\n        this.searchList = new List(this.$el.find(\".products-list\")[0], \n                                   { \"valueNames\": [\"name\", \n                                                    \"price\", \n                                                    \"quantity\"] });\n    },\n\n    \"add\": function (product, list) {\n        var productView = new ProductView({ \"model\": product });\n        if (!list) {\n            list = this.newProducts;\n        }\n        list.prepend(productView.el);\n    },\n\n    \"events\": {\n        \"submit form\": \"addProduct\",\n        \"click .old .delete\": \"removeFromList\"\n    },\n\n    \"addProduct\": function (evt) {\n        var $form = $(evt.target),\n            product = new Product ({\n                \"name\": $(\"#product-name\").val(),\n                \"quantity\": $(\"#product-quantity\").val(),\n                \"price\": $(\"#product-price\").val(),\n                \"image\": $(\"#product-image\").val()\n            }),\n            that = this;\n\n        this.collection.create(product, {\n            \"success\": function (product) {\n                that.add(product);\n                $(\"#product-name\").val(\"\");\n                $(\"#product-quantity\").val(\"\");\n                $(\"#product-price\").val(\"\");\n                $(\"#product-image\").val(\"\");\n            }\n        });\n\n        return false;\n    },\n\n    \"removeFromList\": function (evt) {\n        var productName = $(evt.target).parents(\"li\").find(\".name\").text();\n        this.searchList.remove(\"name\", $.trim(productName));\n    }\n});\n","var View           = require(\"./view\"),\n    Product        = require(\"../models/product\"),\n    Products       = require(\"../models/products\"),\n    Receipt        = require(\"../models/receipt\"),\n    template       = require(\"./templates/receipt\"),\n    templateDetail = require(\"./templates/receipt-detail\");\n\nmodule.exports = View.extend({\n    \"tagName\": \"li\",\n    \"className\": \"row receipt\",\n    \"template\": template,\n    \"templateDetail\": templateDetail,\n\n    \"model\": Receipt,\n\n    \"initialize\": function () {\n        this.render();\n    },\n\n    \"getRenderData\": function () { \n        var attributes = this.model.attributes;\n        attributes.date = new Date(attributes.timestamp).toString(\"d/M/yyyy\");\n        return attributes;\n    },\n\n    \"render\": function () {\n        this.$el.html(this.template(this.getRenderData()));\n    },\n\n    \"events\": {\n        \"click .validate\": \"validate\",\n        \"click\": \"displayDetails\"\n    },\n\n    \"displayDetails\": function () {\n        var that = this;\n\n        if (that.$el.find(\".details\").length) {\n            that.$el.find(\".details\").remove();\n        } else {\n            this.model.fetch({ \n                \"success\": function (detailed) {\n                    var $ul = $(\"<ul class='details' />\"),\n                        $li,\n                        detail,\n                        details,\n                        i;\n                    that.$el.append($ul);\n                    details = detailed.get(\"details\");\n                    for (i = 0; i < details.length; i++) {\n                        detail = details[i];\n                        if (!detail.label) {\n                            detail.label = \"\";\n                        }\n                        $ul.append(that.templateDetail(details[i]));\n                    }\n                }\n            });\n        }\n    },\n\n    \"validate\": function (evt) {\n        var that    = this,\n            $target = $(evt.target);\n\n        $target.removeClass(\"btn-info\");\n        $target.addClass(\"btn-warning\");\n        this.model.fetch({ \n            \"success\": function (detailed) {\n                Products.prototype.addProducts(detailed.get(\"details\"), \n                                               function () {\n                    $target.removeClass(\"btn-warning\");\n                    $target.addClass(\"btn-success\");\n                });\n            },\n            \"error\": function (data) {\n                $target.removeClass(\"btn-warning\");\n                $target.addClass(\"btn-error\");\n            }\n        });\n        return false;\n    }\n});\n","var View        = require(\"./view\"),\n    Receipt     = require(\"../models/receipt\"),\n    Receipts    = require(\"../models/receipts\"),\n    ReceiptView = require(\"./receipt\"),\n    template    = require(\"./templates/receipts\");\n\nmodule.exports = View.extend({\n    \"collection\": Receipts,\n    \n    \"template\": template,\n\n    \"render\": function () {\n        this.$el.html(this.template(this.getRenderData()));\n        this.receiptsList = this.$el.find(\"ul.receipts\");\n        this.collection.each(function (receipt){\n            this.add(receipt);\n        }, this);\n    },\n\n    \"updateRender\": function (swiper) {\n        console.log(\"this is a prototype, recepts list doesnt update\")\n    },\n\n    \"add\": function (receipt) {\n        var receiptView = new ReceiptView({ \"model\": receipt, \n                                            \"products\": this.products });\n        this.receiptsList.prepend(receiptView.el);\n    },\n});\n","var View     = require(\"./view\"),\n    Recipe   = require(\"../models/recipe\"),\n    template = require(\"./templates/recipe\");\n\nmodule.exports = View.extend({\n    \"tagName\": \"li\",\n    \"className\": \"row recipe\",\n    \"template\": template,\n\n    \"model\": Recipe,\n\n    \"getRenderData\": function () { \n        var attributes = this.model.attributes;\n        if (!attributes.image) {\n            attributes.image = \"images/recipe.png\";\n        }\n        if (attributes.description) {\n            attributes.description = \n                attributes.description.replace(/[\\r\\n]+/g, \"<br>\");\n        }\n        return attributes;\n    },\n\n    \"initialize\": function () {\n        this.render();\n    },\n\n    \"events\": {\n        \"click .delete\": \"destroy\",\n    },\n\n    \"destroy\": function () {\n        var that = this,\n            $recipesProducts = $(\"#recipe-products\"),\n            $recipesTags = $(\"#recipe-tags\");\n\n        $(\"#recipe-image\")\n            .val(that.$el.find(\".image img\").attr(\"src\"));\n        $(\"#recipe-name\").val(that.$el.find(\".name\").text());\n        $(\"#recipe-description\")\n            .val(that.$el.find(\".description\")\n                    .html()\n                    .replace(/<br>/gi, \"\\n\"));\n\n        $recipesProducts.find(\"options:selected\").prop(\"selected\", false);\n        that.$el.find(\".recipe-products li\").each(function () {\n            $recipesProducts.find(\"option[value='\" + $(this).text() + \"']\")\n                .prop(\"selected\", true);\n        });\n        that.$el.find(\".recipe-tags span\").each(function () {\n            $recipesTags.find(\"option[value='\" + $.trim($(this).text()) + \"']\")\n                .prop(\"selected\", true);\n        });\n        $(\".select-picker\").selectpicker(\"refresh\");\n\n        that.model.destroy({\n            \"success\": function () {\n                that.remove();\n            }\n        });\n    }\n});\n\n","var View       = require(\"./view\"),\n    Recipe     = require(\"../models/recipe\"),\n    Recipes    = require(\"../models/recipes\"),\n    RecipeView = require(\"./recipe\"),\n    template   = require(\"./templates/recipes\");\n\nmodule.exports = View.extend({\n    \"collection\": Recipes,\n    \n    \"template\": template,\n\n    \"initialize\": function (params) {\n        this.products = params.products.models;\n    },\n\n    \"getRenderData\": function () {\n        return { \"products\": this.products };\n    },\n\n    \"render\": function () {\n        this.$el.html(this.template(this.getRenderData()));\n        this.$el.find(\".select-picker\").selectpicker({\n            \"title\": \"aucun produit\",\n            \"noneResultsText\": \"aucun produit contenant\"\n        });\n        this.collection.each(function (recipe){\n            this.add(recipe);\n        }, this);\n    },\n\n    \"add\": function (recipe) {\n        var recipeView = new RecipeView({ \"model\": recipe });\n        this.$el.find(\"ul.recipes\").prepend(recipeView.el)\n    },\n\n    \"events\": {\n        \"submit form\": \"addRecipe\",\n    },\n\n    \"addRecipe\": function (evt) {\n        var $form = $(evt.target),\n            recipe = new Recipe ({\n                \"name\": $(\"#recipe-name\").val(),\n                \"description\": $(\"#recipe-description\").val(),\n                \"products\": $(\"#recipe-products\").val(),\n                \"tags\": $(\"#recipe-tags\").val(),\n                \"image\": $(\"#recipe-image\").val(),\n                \"toCook\": false\n            }),\n            that = this;\n\n        if (!recipe.get(\"image\")) {\n            recipe.image = \"images/recipe.png\";\n        }\n        that.collection.create(recipe, {\n            \"success\": function (recipe) {\n                that.add(recipe);\n            }\n        });\n\n        return false;\n    },\n\n});\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<span title=\"supprimer\" class=\"delete\"><button class=\"btn btn-danger glyphicon glyphicon-remove\"></button></span><span class=\"name\">' + escape((interp = name) == null ? '' : interp) + '</span><ul>');\n// iterate products\n;(function(){\n  if ('number' == typeof products.length) {\n    for (var $index = 0, $$l = products.length; $index < $$l; $index++) {\n      var product = products[$index];\n\nbuf.push('<li class=\"product\">+ ' + escape((interp = product.id) == null ? '' : interp) + ' </li>');\n    }\n  } else {\n    for (var $index in products) {\n      var product = products[$index];\n\nbuf.push('<li class=\"product\">+ ' + escape((interp = product.id) == null ? '' : interp) + ' </li>');\n   }\n  }\n}).call(this);\n\nbuf.push('</ul>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\n// iterate recipes\n;(function(){\n  if ('number' == typeof recipes.length) {\n    for (var $index = 0, $$l = recipes.length; $index < $$l; $index++) {\n      var recipe = recipes[$index];\n\nbuf.push('<div class=\"recipe\"> <span class=\"name\">' + escape((interp = recipe.attributes.name) == null ? '' : interp) + '<div class=\"btn glyphicon glyphicon-unchecked\"> </div></span></div>');\n    }\n  } else {\n    for (var $index in recipes) {\n      var recipe = recipes[$index];\n\nbuf.push('<div class=\"recipe\"> <span class=\"name\">' + escape((interp = recipe.attributes.name) == null ? '' : interp) + '<div class=\"btn glyphicon glyphicon-unchecked\"> </div></span></div>');\n   }\n  }\n}).call(this);\n\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"navigation left\"></div><div class=\"swiper-container\"><div class=\"swiper-wrapper\"><div class=\"swiper-slide\"> <h2>Information de consomation</h2><div class=\"history\"><div id=\"holder\"></div></div></div><div class=\"swiper-slide\"> <h2>Choix des catégories</h2><div class=\"tags\"><div class=\"row\"><div class=\"col-xs-offset-4 col-xs-2\"><span class=\"tag\"><img alt=\"pas cher\" class=\"cheap\"/></span></div><div class=\"col-xs-2\"><span class=\"tag\"><img alt=\"rapide\" class=\"quick\"/></span></div></div><div class=\"row\"><div class=\"col-xs-offset-4 col-xs-2\"><span class=\"tag\"><img alt=\"bio\" class=\"organic\"/></span></div><div class=\"col-xs-2\"><span class=\"tag\"><img alt=\"light\" class=\"light\"/></span></div></div><div class=\"row\"><div class=\"col-xs-offset-4 col-xs-2\"><span class=\"tag\"><img alt=\"végétarien\" class=\"vegetarian\"/></span></div><div class=\"col-xs-2\"><span class=\"tag\"><img alt=\"sucré\" class=\"sugar\"/></span></div></div></div><h2>Choix du prix</h2><form class=\"price row\"><div class=\"form-group col-xs-offset-4 col-xs-4\"><input id=\"cart-price\" placeholder=\"Prix\" required=\"required\" value=\"10\" name=\"price\" class=\"form-control\"/></div></form></div><div class=\"swiper-slide carts\"><div class=\"row\"><div class=\"choose-recipe col-xs-6\"><h2>Choix de la recette</h2><div class=\"carts-recipes\"></div></div><div class=\"choose-products col-xs-6\"><h2>Panier</h2><div class=\"products\"></div></div></div><hr/><div class=\"btn btn-primary order\">Commander</div><hr/><h2>Commandes en cours</h2><ul class=\"carts row\"></ul></div></div></div><div class=\"navigation right\"></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div id=\"content\" class=\"menu\"><div class=\"header\"><div class=\"menu\"><a class=\"menu\"><img src=\"images/title.png\" alt=\"aliventaire\" title=\"Aliventaire\"/></a></div><div class=\"shop\"><a href=\"/\" class=\"menu\"><img src=\"images/shop.png\" alt=\"shop\" title=\"Retour au menu\" class=\"menu\"/></a><h1>Mes courses</h1><div class=\"pagination\"></div></div><div class=\"fridge\"><a href=\"/\" class=\"menu\"><img src=\"images/fridge.png\" alt=\"fridge\" title=\"Retour au menu\" class=\"menu\"/></a><h1>Mon placard</h1><div class=\"pagination\"></div></div><div class=\"kitchen\"><a href=\"/\" class=\"menu\"><img src=\"images/kitchen.png\" alt=\"kitchen\" title=\"Retour au menu\" class=\"menu\"/></a><h1>Ma cuisine</h1><div class=\"pagination\"></div></div><div class=\"recipes\"><a href=\"/\" class=\"menu\"><img src=\"images/recipes.png\" alt=\"recipes\" title=\"Retour au menu\" class=\"menu\"/></a><h1>Mes recettes</h1><div class=\"pagination\"></div></div></div><div class=\"page\"><div class=\"menu\"><div class=\"row\"><a href=\"/\" class=\"shop\"><img src=\"images/shop.png\" alt=\"shop\" title=\"Mes courses\" class=\"shop\"/></a><a href=\"/\" class=\"fridge\"><img src=\"images/fridge.png\" alt=\"fridge\" title=\"Mon placard\" class=\"fridge\"/></a></div><div class=\"row\"><a href=\"/\" class=\"kitchen\"><img src=\"images/kitchen.png\" alt=\"kitchen\" title=\"Ma cuisine\" class=\"kitchen\"/></a><a href=\"/\" class=\"recipes\"><img src=\"images/recipes.png\" alt=\"recipes\" title=\"Mes recettes\" class=\"recipes\"/></a></div></div><div id=\"shop\" class=\"shop\"></div><div id=\"fridge\" class=\"fridge\"></div><div id=\"kitchen\" class=\"kitchen\"></div><div id=\"recipes\" class=\"recipes\"></div></div></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"kitchen\"><div class=\"navigation left\"></div><div class=\"swiper-container\"><div class=\"swiper-wrapper\"><div class=\"swiper-slide\"> <h2>Tickets de caisse</h2><h3>Validez les tickets de caisse pour mettre les produits dans le frigo !</h3><div id=\"receipts\"></div></div><div class=\"swiper-slide\"> <h2>Recette à cuisiner</h2><h3>Validez les recettes à cuisiner pour enlever les produits du frigo !</h3><div id=\"recipes-to-cook\"></div></div></div></div><div class=\"navigation right\"></div></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div title=\"supprimer\" class=\"delete col-xs-1\"><button class=\"btn btn-danger\"><span class=\"glyphicon glyphicon-remove\"></span></button></div><div class=\"image col-xs-1\"> <img');\nbuf.push(attrs({ 'src':(\"\" + (image) + \"\"), 'alt':(\"\"), 'title':(\"\" + (name) + \"\") }, {\"src\":true,\"alt\":true,\"title\":true}));\nbuf.push('/></div><div class=\"name col-xs-5\">' + escape((interp = name) == null ? '' : interp) + '</div><div class=\"price col-xs-2\">' + escape((interp = price) == null ? '' : interp) + '</div><div class=\"quantity col-xs-3\">' + escape((interp = quantity) == null ? '' : interp) + '<span class=\"actions\"><button class=\"minus btn btn-default\"><span class=\"glyphicon glyphicon-minus\"></span></button><button class=\"plus btn btn-default\"><span class=\"glyphicon glyphicon-plus\"></span></button></span></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<form role=\"form\" class=\"form-inline\"><div class=\"row\"><div class=\"form-group col-xs-7\"><input id=\"product-name\" type=\"text\" required=\"required\" placeholder=\"Produit\" class=\"form-control\"/></div><div class=\"form-group col-xs-2\"><input id=\"product-price\" type=\"text\" required=\"required\" pattern=\"[0-9]+(.[0-9]+)?\" title=\"le prix unitaire de ce produit (ex: 3.2)\" placeholder=\"Prix unitaire\" class=\"form-control\"/></div><div class=\"form-group col-xs-2\"><input id=\"product-quantity\" type=\"text\" pattern=\"[0-9]+\" title=\"le nombre de produits de ce type\" placeholder=\"Quantité\" class=\"form-control\"/></div><div class=\"col-xs-1\"><button type=\"submit\" title=\"ajouter\" class=\"btn btn-default\"><span class=\"glyphicon glyphicon-plus\"></span></button></div></div><div class=\"row\"><div class=\"form-group col-xs-11\"><input id=\"product-image\" type=\"text\" placeholder=\"adresse de l\\'image\" class=\"form-control\"/></div></div></form><div class=\"products-list\"><ul class=\"products new\"></ul><hr/><div class=\"row\"><div class=\"form-group col-xs-10 col-xs-offset-2\"><input type=\"text\" placeholder=\"filtrer\" class=\"search form-control\"/></div></div><div class=\"row\"><button title=\"trier par nom\" data-sort=\"name\" class=\"sort btn btn-default col-xs-5 col-xs-offset-2\"><span class=\"glyphicon glyphicon-sort\"></span>nom</button><button title=\"trier par prix\" data-sort=\"price\" class=\"sort btn btn-default col-xs-2\"> <span class=\"glyphicon glyphicon-sort\"></span>prix</button><button title=\"trier par quantité\" data-sort=\"quantity\" class=\"sort btn btn-default col-xs-3\"> <span class=\"glyphicon glyphicon-sort\"></span>quantité</button></div><ul class=\"products old list\"></ul></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<li class=\"row\"><span class=\"col-xs-1\">' + escape((interp = amount) == null ? '' : interp) + '</span><span class=\"col-xs-8\">' + escape((interp = label) == null ? '' : interp) + '</span><span class=\"col-xs-3\">' + escape((interp = price) == null ? '' : interp) + '</span></li>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"transaction col-xs-3\">' + escape((interp = date) == null ? '' : interp) + '</div><div title=\"afficher le détail du ticket de caisse\" class=\"receipt-id col-xs-3\">' + escape((interp = receiptId) == null ? '' : interp) + '</div><div class=\"total col-xs-3\">' + escape((interp = total) == null ? '' : interp) + '</div><div title=\"valider\" class=\"validate col-xs-3\"><button class=\"btn btn-info\"><span class=\"glyphicon glyphicon-check\"></span></button></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<ul class=\"receipts\"></ul>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"image col-xs-3\"> <img');\nbuf.push(attrs({ 'src':(\"\" + (image) + \"\"), 'alt':(\"image\"), 'title':(\"\" + (name) + \"\") }, {\"src\":true,\"alt\":true,\"title\":true}));\nbuf.push('/></div><div class=\"col-xs-8\"> <div class=\"name\"> <span title=\"supprimer\" class=\"delete\"><button class=\"btn btn-danger\"><span class=\"glyphicon glyphicon-remove\"></span></button></span><span>' + escape((interp = name) == null ? '' : interp) + '</span></div><div class=\"recipe-tags\"> ');\n// iterate tags\n;(function(){\n  if ('number' == typeof tags.length) {\n    for (var $index = 0, $$l = tags.length; $index < $$l; $index++) {\n      var tag = tags[$index];\n\nbuf.push('<span class=\"tag\">' + escape((interp = tag.id) == null ? '' : interp) + ' </span>');\n    }\n  } else {\n    for (var $index in tags) {\n      var tag = tags[$index];\n\nbuf.push('<span class=\"tag\">' + escape((interp = tag.id) == null ? '' : interp) + ' </span>');\n   }\n  }\n}).call(this);\n\nbuf.push('</div><div class=\"description\">' + ((interp = description) == null ? '' : interp) + '</div><hr/><div class=\"recipe-products\">Produits :<ul>');\n// iterate products\n;(function(){\n  if ('number' == typeof products.length) {\n    for (var $index = 0, $$l = products.length; $index < $$l; $index++) {\n      var product = products[$index];\n\nbuf.push('<li>' + escape((interp = product.name) == null ? '' : interp) + '</li>');\n    }\n  } else {\n    for (var $index in products) {\n      var product = products[$index];\n\nbuf.push('<li>' + escape((interp = product.name) == null ? '' : interp) + '</li>');\n   }\n  }\n}).call(this);\n\nbuf.push('</ul></div></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<form role=\"form\"><div class=\"form-group\"><input id=\"recipe-name\" type=\"text\" required=\"required\" placeholder=\"Nom de la recette\" class=\"form-control\"/></div><div class=\"form-group col-xs-6\"><textarea id=\"recipe-description\" type=\"text\" placeholder=\"Description de la recette\" class=\"form-control\"></textarea></div><div class=\"form-group col-xs-6\"><label for=\"recipe-products\">Produits nécessaires :</label><select id=\"recipe-products\" multiple=\"multiple\" data-live-search=\"true\" class=\"form-control select-picker\">');\n// iterate products\n;(function(){\n  if ('number' == typeof products.length) {\n    for (var $index = 0, $$l = products.length; $index < $$l; $index++) {\n      var product = products[$index];\n\nbuf.push('<option');\nbuf.push(attrs({ 'value':(\"\" + (product.attributes.name) + \"\") }, {\"value\":true}));\nbuf.push('> \\n' + escape((interp = product.attributes.name) == null ? '' : interp) + '</option>');\n    }\n  } else {\n    for (var $index in products) {\n      var product = products[$index];\n\nbuf.push('<option');\nbuf.push(attrs({ 'value':(\"\" + (product.attributes.name) + \"\") }, {\"value\":true}));\nbuf.push('> \\n' + escape((interp = product.attributes.name) == null ? '' : interp) + '</option>');\n   }\n  }\n}).call(this);\n\nbuf.push('</select><label for=\"recipe-products\">Catégoriess :</label><select id=\"recipe-tags\" multiple=\"multiple\" class=\"form-control select-picker\"><option value=\"cheap\">pas cher</option><option value=\"quick\">rapide</option><option value=\"organic\">bio</option><option value=\"light\">light</option><option value=\"vegetarian\">végétarien</option><option value=\"sugar\">sucré</option></select></div><div class=\"form-group\"><input id=\"recipe-image\" type=\"text\" placeholder=\"adresse de l\\'image\" class=\"form-control\"/></div><div class=\"form-group\"><button type=\"submit\" title=\"ajouter\" class=\"btn btn-default\"><span class=\"glyphicon glyphicon-plus\"></span></button></div></form><ul class=\"recipes\"></ul>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<ul class=\"recipes\"></ul>');\n}\nreturn buf.join(\"\");\n};","var View     = require(\"./view\"),\n    Recipe   = require(\"../models/recipe\"),\n    Product  = require(\"../models/product\"),\n    Products = require(\"../models/products\"),\n    template = require(\"./templates/recipe\");\n\nmodule.exports = View.extend({\n    \"tagName\": \"li\",\n    \"className\": \"row recipe\",\n    \"template\": template,\n\n    \"model\": Recipe,\n\n    \"getRenderData\": function () { \n        var attributes = this.model.attributes;\n        if (!attributes.image) {\n            attributes.image = \"images/recipe.png\";\n        }\n        if (attributes.description) {\n            attributes.description = \n                attributes.description.replace(/[\\r\\n]+/g, \"<br>\");\n        }\n        return attributes;\n    },\n\n    \"initialize\": function () {\n        this.render();\n    },\n\n    \"events\": {\n        \"click .delete\": \"destroy\",\n    },\n\n    \"destroy\": function () {\n        var that = this,\n            i,\n            product,\n            products = this.model.get(\"products\"),\n            details = [];\n\n        for (var i = 0; i < products.length; i++) {\n            product = products[i];\n            details.push({ \"label\": product.name, \"amount\": -1 })\n        }\n        Products.prototype.removeProducts(details, function () {\n            var cooked,\n                toCook;\n            // TODO: increment and decrement toCook in a model function\n            //       to prevent < 0\n            toCook = that.model.get(\"toCook\") - 1;\n            cooked = that.model.get(\"cooked\");\n            if (cooked) {\n                cooked++;\n            } else {\n                cooked = 1;\n            }\n            that.model.save({ \"toCook\": toCook, \"cooked\": cooked }, {\n                \"success\": function (data) {\n                    if (!data.attributes.toCook) {\n                        that.remove();\n                    }\n                }\n            });\n        });\n    }\n});\n","var View       = require(\"./view\"),\n    Recipe     = require(\"../models/recipe\"),\n    ToCook     = require(\"../models/to_cook\"),\n    ToCookView = require(\"./to_cook\"),\n    template   = require(\"./templates/to_cooks\");\n\nmodule.exports = View.extend({\n    \"collection\": ToCook,\n    \n    \"template\": template,\n\n    \"render\": function () {\n        var that = this;\n        this.$el.html(this.template(this.getRenderData()));\n\n        this.recipesList = this.$el.find(\"ul.recipes\");\n        this.collection.each(function (recipe){\n            that.add(recipe);\n        });\n    },\n\n    \"updateRender\": function (swiper) {\n        var that = this,\n            $recipes = this.recipesList;\n\n        $recipes.html(\"\");\n        that.collection.fetch({\n            \"success\": function (collection) {\n                that.collection = collection;\n                that.height = 0;\n                collection.each(function (recipe){\n                    that.add(recipe);\n                });\n                // TODO: see how to solve this :\n                // idangerous doesnt update his heigth after dom change ...\n                $recipes.height(that.height);\n                $recipes.parents(\".swiper-slide\").height(that.height + 500);\n                $recipes.parents(\".swiper-wrapper\").height(that.height + 500);\n                swiper.resizeFix();\n            }\n        });\n    },\n\n    \"add\": function (recipe) {\n        var recipeView = new ToCookView({ \"model\": recipe }),\n            $recipes = this.recipesList;\n        $recipes.prepend(recipeView.el);\n\n        this.height = this.height + recipeView.$el.height();\n    },\n});\n","require('lib/view_helper');\n\n// Base class for all views.\nmodule.exports = Backbone.View.extend({\n    \"initialize\": function () {\n        this.render = _.bind(this.render, this);\n    },\n\n    \"template\": function () { return null; },\n    \"getRenderData\": function () { return null; },\n\n    \"render\": function () {\n        this.$el.html(this.template(this.getRenderData()));\n        this.afterRender();\n        return this;\n    },\n\n    \"afterRender\": function () { return null; }\n});\n"]}