{"version":3,"file":"public/javascripts/app.js","sources":["app/application.js","app/initialize.js","app/lib/router.js","app/lib/view_helper.js","app/models/collection.js","app/models/model.js","app/views/home_view.js","app/views/templates/home.jade","app/views/view.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;;A,CCAA;;AACA;AADA;;A,CCAA;;AACA;AACA;AACA;AAHA;;A,CCAA;;AACA;AACA;AACA;AAHA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;;A","sourcesContent":["// Application bootstrapper.\nvar Application = {\n  initialize: function () {\n    var HomeView = require('views/home_view'), Router = require('lib/router');\n    // Ideally, initialized classes should be kept in controllers & mediator.\n    // If you're making big webapp, here's more sophisticated skeleton\n    // https://github.com/paulmillr/brunch-with-chaplin\n    this.homeView = new HomeView();\n    this.router = new Router();\n    if (typeof Object.freeze === 'function') {\n      Object.freeze(this);\n    }\n  }\n};\n\nmodule.exports = Application;\n","var application = require('application');\n\n$(function () {\n  application.initialize();\n  Backbone.history.start();\n});\n","var application = require('application');\n\nmodule.exports = Backbone.Router.extend({\n  routes: {\n    '': 'home'\n  },\n\n  home: function () {\n    $('body').html(application.homeView.render().el);\n  }\n});\n","// Put your handlebars.js helpers here.\n","// Base class for all collections.\nmodule.exports = Backbone.Collection.extend({\n});\n","// Base class for all models.\nmodule.exports = Backbone.Model.extend({\n});\n","var View = require('./view');\nvar template = require('./templates/home');\n\nmodule.exports = View.extend({\n  id: 'home-view',\n  template: template\n});\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div id=\"content\"><h1>Cozy template</h1><h2>Welcome</h2><ul><li> <a href=\"https://github.com/mycozycloud/cozy-setup/wiki\">Documentation</a></li><li> <a href=\"https://github.com/mycozycloud/cozy-setup/wiki/Getting-started\">Getting Started</a></li><li> <a href=\"https://github.com/mycozycloud\">Github</a></li></ul></div>');\n}\nreturn buf.join(\"\");\n};","require('lib/view_helper');\n\n// Base class for all views.\nmodule.exports = Backbone.View.extend({\n  initialize: function () {\n    this.render = _.bind(this.render, this);\n  },\n\n  template: function () { return null; },\n  getRenderData: function () { return null; },\n\n  render: function () {\n    this.$el.html(this.template(this.getRenderData()));\n    this.afterRender();\n    return this;\n  },\n\n  afterRender: function () { return null; }\n});\n"]}